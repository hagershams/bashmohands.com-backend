// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String          @id @default(uuid())
  firstName          String
  lastName           String
  handler            String          @unique
  email              String          @unique
  password           String
  country            String?
  phone              String?
  photo              String?
  coverImage         String?
  NID_Verified       Boolean?        @default(false)
  isInstructor       Boolean?        @default(false)
  jobTitle           String?
  bio                String?
  experience         String?
  hourlyRate         Float?
  paidBalance        Float?          @default(0.0)
  unPaidBalance      Float?          @default(0.0)
  availability       Boolean?        @default(false)
  freeSession        Boolean?        @default(false)
  discount           Float?
  rating             Float?          @default(0.0)
  resetToken         String?
  resetTokenExpires  DateTime?
  changedPasswordAt  DateTime?
  loggedOutAt        DateTime?
  role               RoleEnum        @default(CLIENT)
  topics             UserTopics[]
  instructorSessions Session[]
  bookedSlots        BookedSlot[]
  clientSession      clientSession[]
}

model Topic {
  id    String       @id @default(uuid())
  name  String       @unique
  users UserTopics[]
}

model UserTopics {
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  topic   Topic  @relation(fields: [topicId], references: [id])
  topicId String

  @@id([userId, topicId])
}

model Session {
  id           String          @id @default(uuid())
  title        String
  delivered    Boolean
  capacity     Int
  startTime    DateTime
  endTime      DateTime
  instructor   User            @relation(fields: [instructorId], references: [id])
  instructorId String
  bookedSlots  BookedSlot[]
  clients      clientSession[]
}

model clientSession {
  client    User    @relation(fields: [clientId], references: [id])
  clientId  String
  session   Session @relation(fields: [sessionId], references: [id])
  sessionId String

  @@id([clientId, sessionId])
}

model BookedSlot {
  id           String   @id @default(uuid())
  startTime    DateTime
  endTime      DateTime
  rate         Float
  order        Int
  instructor   User     @relation(fields: [instructorId], references: [id])
  instructorId String
  session      Session  @relation(fields: [sessionId], references: [id])
  sessionId    String
}

enum RoleEnum {
  ADMIN
  CLIENT
  INSTRUCTOR
}
